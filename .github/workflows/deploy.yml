on:
  push:
    branches:
    - '*/*'
    - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: checking-out-files
      uses: actions/checkout@v3
    - name: setting-up-node-env
      uses: actions/setup-node@v3
      with:
        node-version: '18.12.1'

    - name: building-app
      run: |
        cd app
        npm ci
        npm run build --if-present
    - name: creating-app-deployment-artifact
      env:
        GITHUB_SHA: ${{ github.sha }}
      run: |
        cd app/build
        tar -cvzf ../../app."${GITHUB_SHA}".tar.gz ./
    - name: uploading-app-deployment-artifact
      uses: actions/upload-artifact@v3
      with:
        name: app-build
        path: app.${{ github.sha }}.tar.gz
        retention-days: 1

    - name: building-api
      run: |
        cd api
        npm ci
        npm run build --if-present
    - name: creating-app-deployment-artifact
      env:
        GITHUB_SHA: ${{ github.sha }}
      run: |
        cd api/build
        tar -cvzf ../../api."${GITHUB_SHA}".tar.gz ./
    - name: uploading-api-deployment-artifact
      uses: actions/upload-artifact@v3
      with:
        name: api-build
        path: api.${{ github.sha }}.tar.gz
        retention-days: 1

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: downloading-app-deployment-artifact
      uses: actions/download-artifact@v3
      with:
        name: app-build
    - name: coping-app-deployment-artifact-to-server
      uses: appleboy/scp-action@master
      with:
        host: "ec2-44-212-44-166.compute-1.amazonaws.com"
        username: "ubuntu"
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        source: app.${{ github.sha }}.tar.gz
        target: /tmp/
    - name: downloading-api-deployment-artifact
      uses: actions/download-artifact@v3
      with:
        name: api-build
    - name: coping-api-deployment-artifact-to-server
      uses: appleboy/scp-action@master
      with:
        host: "ec2-44-212-44-166.compute-1.amazonaws.com"
        username: "ubuntu"
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        source: api.${{ github.sha }}.tar.gz
        target: /tmp/
    - name: extracting-app-deployment-artifact-on-server
      uses: appleboy/ssh-action@master
      with:
        host: "ec2-44-212-44-166.compute-1.amazonaws.com"
        username: "ubuntu"
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          mkdir -p /home/ubuntu/releases/app/${{ github.sha }}
          tar -xvf /tmp/app.${{ github.sha }}.tar.gz -C /home/ubuntu/releases/app/${{ github.sha }}
    - name: extracting-api-deployment-artifact-on-server
      uses: appleboy/ssh-action@master
      with:
        host: "ec2-44-212-44-166.compute-1.amazonaws.com"
        username: "ubuntu"
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          mkdir -p /home/ubuntu/releases/api/${{ github.sha }}
          tar -xvf /tmp/api.${{ github.sha }}.tar.gz -C /home/ubuntu/releases/api/${{ github.sha }}

  release:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
    - name: releasing-app
      uses: appleboy/ssh-action@master
      with:
        host: "ec2-44-212-44-166.compute-1.amazonaws.com"
        username: "ubuntu"
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: ln -sfn /home/ubuntu/releases/app/${{ github.sha }} /home/ubuntu/movie/app/current
    - name: releasing-api
      uses: appleboy/ssh-action@master
      with:
        host: "ec2-44-212-44-166.compute-1.amazonaws.com"
        username: "ubuntu"
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          ln -sfn /home/ubuntu/releases/api/${{ github.sha }} /home/ubuntu/movie/api/current
          source /home/ubuntu/movie/api/.env
          cd /home/ubuntu/movie/api/current
          pm2 delete all
          pm2 start index.js --name "api"

  clean:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
    - name: cleaning
      run: |
        rm -frv /tmp/app.*
        rm -frv /tmp/api.*
        (cd /home/ubuntu/releases/app && ls -t -1 | tail -n +6 | xargs rm -rf)
        (cd /home/ubuntu/releases/api && ls -t -1 | tail -n +6 | xargs rm -rf)

